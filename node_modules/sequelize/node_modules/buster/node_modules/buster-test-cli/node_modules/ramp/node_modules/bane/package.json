{
  "name": "bane",
  "version": "0.1.0",
  "description": "(Yet another) Event emitter for Node, Browser globals and AMD",
  "homepage": "http://busterjs.org/docs/bane/",
  "author": {
    "name": "Christian Johansen",
    "email": "christian@cjohansen.no",
    "url": "http://cjohansen.no"
  },
  "contributors": [
    {
      "name": "August Lilleaas",
      "email": "august.lilleaas@gmail.com",
      "url": "http://augustl.com"
    }
  ],
  "main": "./lib/bane",
  "repository": {
    "type": "git",
    "url": "https://github.com/busterjs/bane.git"
  },
  "scripts": {
    "test": "./node_modules/buster/bin/buster-test --node"
  },
  "devDependencies": {
    "buster": "0.6.2"
  },
  "readme": ".. default-domain:: js\n.. highlight:: javascript\n\n====\nBANE\n====\n\n    Browser globals, AMD and Node Events\n\n.. raw:: html\n\n    <a href=\"http://travis-ci.org/busterjs/bane\" class=\"travis\">\n      <img src=\"https://secure.travis-ci.org/busterjs/bane.png\">\n    </a>\n\n``bane`` is a small event emitter library that works in browsers (including old\nand rowdy ones, like IE6) and Node. It will define itself as an AMD module if\nyou want it to (i.e. if there's a ``define`` function available).\n\n``bane`` is not entirely API compatible with Node's event emitter, but it does\nprovide the iconic ``on`` and ``emit`` functions.\n\nDevelopers - Running tests\n==========================\n\n::\n\n    npm install\n    ./node_modules/buster/bin/buster-test --node\n    ./node_modules/buster/bin/buster-server\n    ./node_modules/buster/bin/buster-test --browser\n\nEmitter creation API\n====================\n\n``var emitter = bane.createEventEmitter([object]);``\n----------------------------------------------------\n\nCreate a new event emitter. If an object is passed, it will be modified by\nadding the event emitter methods (see below).\n\nEmitter API\n===========\n\n``on(event, listener)``\n-----------------------\n\nRegister the ``listener`` function to be called when the emitter emits the\n``event`` (which is a string).\n\n``on(listener)``\n----------------\n\nRegister the ``listener`` function as a \"supervisor\". It will be called for\nany event emitted from the emitter.\n\n``off(event, listener)``\n------------------------\n\nRemove a previously registered ``listener`` function for the specified ``event``\n(which is a string). If the function has not previously been registered, it is\nsilently ignored.\n\n``once(event, listener)``\n-------------------------\n\nRegister a ``listener`` function for the given ``event`` (which is a string)\nonly once. After the first event has been emitted, the listener is removed.\n\n``bind(object)``\n----------------\n\nRegister all methods on ``object`` as listeners for the event named as the\nmethod name. Convenient way to bind many event listeners in one go:\n\n::\n\n    var listener = {\n        start: function () {\n            console.log(\"Started!\");\n        },\n\n        end: function () {\n            console.log(\"Ended\");\n        }\n    };\n\n    emitter.bind(listener);\n\nThe above example will bind ``listener.start`` to the ``\"start\"`` event and vice\nversa with ``end``. Note that property names can be quoted to bind to any kind of\nevent name (e.g. ``\"test:start\"``).\n\n``bind(object, events)``\n------------------------\n\nBinds methods on ``object`` to corresponding events (see ``bind(object)``\nabove), but instead of binding all methods on the object, only binds the\nevents listed in the provided ``events`` array.\n\n``emit(event[, data1[, data2[, ...]]])``\n----------------------------------------\n\nEmit the ``event`` (which is a string) with optional data. Will cause all\nregistered listeners for the named event to be called. If additional arguments\nare provided, the listeners will be called with them.\n\nLicense\n=======\n\nTwo-clause BSD-license, see `LICENSE <https://raw.github.com/busterjs/bane/master/LICENSE>`_\n",
  "readmeFilename": "Readme.rst",
  "bugs": {
    "url": "https://github.com/busterjs/bane/issues"
  },
  "_id": "bane@0.1.0",
  "dist": {
    "shasum": "f41a6539e4ca9f96369ee5bc1fc5416da90d7639"
  },
  "_from": "bane@~0.1",
  "_resolved": "https://registry.npmjs.org/bane/-/bane-0.1.0.tgz"
}
