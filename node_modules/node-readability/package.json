{
  "name": "node-readability",
  "version": "0.0.8",
  "author": {
    "name": "Zihua Li"
  },
  "description": "Turning any web page into a clean view.",
  "homepage": "https://github.com/luin/node-readability",
  "repository": {
    "type": "git",
    "url": "git://github.com/luin/node-readability.git"
  },
  "scripts": {
    "test": "mocha -R spec"
  },
  "main": "./src/readability",
  "licenses": [
    {
      "type": "Apache License 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  ],
  "dependencies": {
    "fetch": "0.3.x",
    "jsdom": "0.6.x"
  },
  "engines": [
    "node >=0.6.0"
  ],
  "keywords": [
    "readability"
  ],
  "devDependencies": {
    "mocha": "~1.8.2",
    "should": "~1.2.2"
  },
  "readme": "# node-readability\n\nTurn any web page into a clean view. This module is based on arc90's readability project.\n\n[![Build Status](https://travis-ci.org/luin/node-readability.png?branch=master)](https://travis-ci.org/luin/node-readability)\n\n## Install\n\n    npm install node-readability\n\n## Usage\n\n`readability.read(html [, options], callback)`\n\nWhere\n\n  * **html** url or html code.\n  * **options** is an optional options object\n  * **callback** is the callback to run - `callback(error, article)`\n\nExample\n\n    var readability = require('node-readability');\n\n    readability.read('http://howtonode.org/really-simple-file-uploads', function(err, article) {\n      console.log(article.getContent());\n    });\n\n**NB** If the file has been marked with charset other than utf-8, it is converted automatically. Charsets such as GBK, GB2312 is also supported via [iconv](https://github.com/bnoordhuis/node-iconv).\n\n## Options\n\nnode-readability support all the options that [fetch](https://github.com/andris9/fetch) support.\n\nPossible option values\n\n * **maxRedirects** how many redirects allowed, defaults to 10\n * **disableRedirects** set to true if redirects are not allowed, defaults to false\n * **headers** optional header fields, in the form of `{'Header-Field':'value'}`\n * **maxResponseLength** maximum allowed length for the file, the remainder is cut off. Defaults to `Infinity`\n * **method** defaults to GET\n * **payload** request body\n * **disableGzip** set to false, to disable content gzipping, needed for Node v0.5.9 which has buggy zlib\n * **cookies** an array of cookie definitions in the form of `['name=val']`\n * **cookieJar** for sharing cookies between requests, see below\n * **outputEncoding**\n * **disableDecoding** set to true to disable automatic charset decoding to utf-8\n * **overrideCharset** set input encoding\n * **asyncDnsLoookup** use high performance asynchronous DNS resolution based on c-ares instead of a thread pool calling getaddrinfo(3)\n * **timeout** set a timeout in ms\n * **agent** pass-through http.request agent parameter\n\n## article\n\n### getContent()\n\nReturn the article content of the web page. Return `false` if failed.\n\n### getTitle()\n\nReturn the article title of the web page.\n\n### getHTML()\n\nReturn the original html of the web page.\n\n### getDocument()\n\nReturn the document of the web page generated by jsdom.\n\n## TODO\n\n  * Support more readability features\n  * Performance optimization\n\n## License\n\nThis code is under the Apache License 2.0.  http://www.apache.org/licenses/LICENSE-2.0\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/luin/node-readability/issues"
  },
  "_id": "node-readability@0.0.8",
  "dist": {
    "shasum": "762835ed2b779314d33902ae19d30383c6e1a997"
  },
  "_from": "node-readability@",
  "_resolved": "https://registry.npmjs.org/node-readability/-/node-readability-0.0.8.tgz"
}
